#!/usr/bin/python
import socket,sys

def titulo():
    print "\n|=====>>========> DNS Resolver | Scann | Whois | Banner Grabbing <======<<=======|\n"

def linha():
    print "_"*56

contador = 0
topPortas = [21,22,23,25,53,67,68,69,80,443,8080,110,123,137,143,161,177,3306]

if (len(sys.argv) <= 1):
    titulo()
    print "=> Modo de uso: ./DNS_Resolver.py [DOMINIO/SITE] [PAREMETRO]\n"
    print "", "-_"*10, "<>| INFO |<>", "_-"*10, "\n"
    print "--help, -h  \t\tExibe os demais comandos"
    print "Top Portas \t\t21, 22, 23, 25, 53, 67, 68, 69, 80, 443, 8080, 110, 123, 137, 143, 161, 177, 3306"
    print "Todas as portas \tDe 1 a 65535"
    linha()

elif((sys.argv[1] == "-h") or (sys.argv[1] == "--help")):
    titulo()
    print "-_"*10, "HELP", "_-"*10
    print "Atribuindo parametros: ./DNS_Resolver.py [DOMINIO] [PAREMETRO]"
    print "-_"*23, "\n"
    print "--help, -h \t\tExibe os demais comandos"
    print "--dns, -d\t\tConsulta o DNS e retorna o IP. Posibilidade de varrer portas [Top Portas ou Todas as Portas]"
    print "--whois, -w \t\tFaz uma consulta WHOIS no DOMINIO desejado"
    print "--banner, -b \t\tTraz o Banner HTTP do server na porta desejada ->Banner Grabbing"
    linha()

elif((sys.argv[2] == "-w") or (sys.argv[2] == "--whois")):

    titulo()
    # Estabelecer conexao
    meuSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    meuSocket.connect(("whois.iana.org", 43))

    # Enviando Query
    meuSocket.send(sys.argv[1]+"\r\n")

    # Resposta do servidor
    resposta = meuSocket.recv(1024).split()
    whois = resposta[19] 

    # Fazendo pesquisa no Whois certo
    novoSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    novoSocket.connect((whois, 43))
    novoSocket.send(sys.argv[1]+"\r\n")

    respostaCerta = novoSocket.recv(1024)

    print(respostaCerta)

    linha()

elif((sys.argv[2] == "-b") or (sys.argv[2] == "--banner")):
    titulo()

    ip = socket.gethostbyname(sys.argv[1])
    porta = input("Digite a Porta: ")

    escolhaBanner = raw_input("Continuar busca do Banner ?[s/n]\n|>")

    if(escolhaBanner == "s"):
        linha()
        print "Buscando Banner de ", ip, " na porta ", porta

        meuSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

        meuSocket.connect((ip, porta))

        banner = meuSocket.recv(1024)

        print(banner)
        print "\n"
        linha()

    else:
        print "Encerrando..."

elif((sys.argv[2] == "-d") or (sys.argv[2] == "--dns")):
    titulo()
    print "Buscando IP de", sys.argv[1],"\n"

    print "|>", sys.argv[1],"--->", socket.gethostbyname(sys.argv[1])

    linha()

    escolhaPorta = raw_input("Verificar Portas abertas ? [s/n]\n|> ")

    if (escolhaPorta == "s"):

        def contarPortas():
            print "\nTotal de portas abertas: ", contador
            linha()

        escolhaTopPortas = raw_input("Digite:\n[1]Todas as Portas\n[2]Top Portas\n[0]Cancelar\n|> ")

        if (escolhaTopPortas == "1"):

            for porta in range(1,65536):  
                meuSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

                if (meuSocket.connect_ex((sys.argv[1], porta)) == 0):
                    contador = contador + 1
                    print "=> Porta:",porta,"-> ABERTA !"
                    meuSocket.close()
                
            if(contador == 0):
                print "Nenhuma Porta aberta"
                linha()
            
            else: 
                contarPortas()

        elif (escolhaTopPortas == "2"):

            for porta in topPortas:  
                meuSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

                if (meuSocket.connect_ex((sys.argv[1], porta)) == 0):
                    contador = contador + 1
                    print "=> Porta:",porta,"-> ABERTA !"
                    meuSocket.close()
                
            if (contador == 0):
                print "Nenhuma Top Porta aberta"
                linha()
                
            else:
                contarPortas()

        else:
            print "Encerrando..."

print "\033[1;31m***>---------------------<***"
print "\033[1;32m***>-<  By: Felipesco  >-<***"
print "\033[1;31m***>---------------------<***"

exit()
